(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{469:function(e,s,a){"use strict";a.r(s);var t=a(30),r=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"docker-启动容器报错-service-endpoint-with-name-xxx-already-exists"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-启动容器报错-service-endpoint-with-name-xxx-already-exists"}},[e._v("#")]),e._v(" Docker 启动容器报错 : service endpoint with name xxx already exists.")]),e._v(" "),a("p",[e._v("使用docker部署服务，启动容器时有时会遇到如标题上的这种报错。"),a("br"),e._v("\n意思是这个端口已经被名为xxx的容器占用了。\n而执行 docker ps 又找不到这个容器，这种情况，通常是xxx容器没有正常删除导致的。")]),e._v(" "),a("h2",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[e._v("#")]),e._v(" 解决方案")]),e._v(" "),a("h3",{attrs:{id:"_1-确保xxx容器已被删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-确保xxx容器已被删除"}},[e._v("#")]),e._v(" 1.确保xxx容器已被删除")]),e._v(" "),a("p",[e._v("首先查看当前所有容器")]),e._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("ps")]),e._v(" -a\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("如果存在xxx容器，则将其强制删除")]),e._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" -f xxx\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h3",{attrs:{id:"_2-清理次容器的网络占用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-清理次容器的网络占用"}},[e._v("#")]),e._v(" 2.清理次容器的网络占用")]),e._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("docker network disconnect --force 网络模式 容器名称\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# eg.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# docker network disconnect --force bridge xxx")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("这里的网络模式对应的就是你的容器的网桥的名称")]),e._v(" "),a("h3",{attrs:{id:"_3-尝试启动容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-尝试启动容器"}},[e._v("#")]),e._v(" 3.尝试启动容器")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker run ...\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("blockquote",[a("p",[e._v("如果还是不能启动，重启docker服务再来一遍。")])]),e._v(" "),a("h2",{attrs:{id:"参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[e._v("#")]),e._v(" 参考链接")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_39800144/article/details/79352053",target:"_blank",rel:"noopener noreferrer"}},[e._v("service endpoint with name xxx already exists."),a("OutboundLink")],1),e._v(" IT云清")])])}),[],!1,null,null,null);s.default=r.exports}}]);